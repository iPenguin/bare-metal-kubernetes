
- name: kubeadm create token
  ansible.builtin.raw: kubeadm token create --print-join-command
  register: join_cmd
  delegate_to: "{{ k8s_controller }}"

- name: Set join fact
  ansible.builtin.set_fact:
    k8s_join_cmd: "{{ join_cmd.stdout_lines[0] }}"

- name: Parse join command variables
  ansible.builtin.set_fact:
    api_endpoint: "{{ join_cmd.stdout | regex_search('kubeadm join (.+?) --token', '\\1') | first }}"
    token: "{{ join_cmd.stdout | regex_search('--token ([^ ]+)', '\\1') | first }}"
    ca_cert_hash: "{{ join_cmd.stdout | regex_search('--discovery-token-ca-cert-hash (sha256:[0-9a-z]+?) ', '\\1') | first }}"

- name: Template JoinConfiguration file
  ansible.builtin.template:
    src: node-join.yaml.j2
    dest: /root/node-join.yaml
    mode: '0644'
  vars:
    host_ipv4: "{{ hosts | json_query('[?name==`' ~ ansible_hostname ~ '`].ipv4') | first }}"
    host_ipv6: "{{ ipv6_network }}::{{ hosts | json_query('[?name==`' ~ ansible_hostname ~ '`].hostid') | first }}"

- name: Join cluster
  ansible.builtin.command:
    cmd: kubeadm join --config /root/node-join.yaml

- name: Enable start kubelet
  ansible.builtin.service:
    name: kubelet
    state: started
    enabled: yes

- name: Check for nodes -- worker
  ansible.builtin.command: kubectl get nodes
  register: nodelist
  delegate_to: "{{ k8s_controller }}"
  failed_when: not '{{ inventory_hostname }}' in nodelist.stdout
