---

- name: populate variables
  ansible.builtin.setup:

- name: Pre-config tasks
  include_tasks: pre-config.yaml

- name: Setup cluster-reset script
  ansible.builtin.template:
    src: cluster-reset.sh.j2
    dest: /root/cluster-reset.sh
    owner: root
    group: root
    mode: 0755

- name: common k8s setup tasks
  include_tasks: "{{ ansible_os_family | lower }}.yaml"

- name: enable and use kubelet
  ansible.builtin.service:
    name: kubelet
    state: started
    enabled: yes
    masked: false

- name: remove existing docker packages from base distro
  ansible.builtin.apt:
    name:
      - docker
      - docker-engine
      - docker.io
    state: absent

- name: update all packages
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: latest

- name: Controller config
  include_tasks: controller.yaml
  when: inventory_hostname in k8s_controller

- name: Check for nodes - primary check
  ansible.builtin.command: kubectl get nodes
  register: nodelist
  delegate_to: "{{ k8s_controller }}"

- name: join other controllers
  include_tasks: secondary-controllers.yaml
  when:
    - inventory_hostname in groups['controllers']
    - inventory_hostname != k8s_controller
    - not inventory_hostname in nodelist.stdout

- name: worker config
  include_tasks: workers.yaml
  when:
    - inventory_hostname in groups['workers']
    - not inventory_hostname in nodelist.stdout

- name: Generate users
  tags:
    - users
  when:
    - inventory_hostname in k8s_controller
    - k8s_admin_users is defined
  block:
    - name: Create admin accounts
      kubernetes.core.k8s:
        state: present
        template: admin-accounts.yaml.j2

    - name: Generate user kube config
      include_tasks: users.yaml
      loop: "{{ k8s_admin_users }}"

- name: Label nodes
  include_tasks: label-nodes.yaml