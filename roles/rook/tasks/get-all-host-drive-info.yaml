---
- name: Get block device information
  ansible.builtin.command: lsblk -J -o NAME,MODEL,SERIAL
  delegate_to: "{{ item.name }}"
  loop: "{{ ceph_storage }}"
  register: lsblk_output
  changed_when: false

- name: Parse lsblk JSON output
  ansible.builtin.set_fact:
    block_devices: "{{ block_devices | default([]) + (item.stdout | from_json).blockdevices }}"
  loop: "{{ lsblk_output.results }}"

- name: Find matching device names
  ansible.builtin.set_fact:
    matched_devices: "{{ block_devices | selectattr('model', 'equalto', item.model) | selectattr('serial', 'equalto', item.serial) }}"
  loop: "{{ ceph_storage | map(attribute='devices') | flatten }}"
  register: matched_devices_result

- name: Transform device output
  set_fact:
    device_list: "{{ device_list | default([]) + item.ansible_facts.matched_devices }}"
  loop: "{{ matched_devices_result.results }}"

- name: Create unified ceph cluster device list
  ansible.builtin.set_fact:
    ceph_cluster_devices: |
      [
        {% for host in ceph_storage %}
        {
          "host": "{{ host.name }}",
          "devices": [
            {% for device in host.devices %}
            {
              "model": "{{ device.model }}",
              "serial": "{{ device.serial }}",
              "osds": {{ device.osds }},
              "name": "{{ (device_list | selectattr('serial', 'equalto', device.serial) | first).name }}"
            }{% if not loop.last %},{% endif %}
            {% endfor %}
          ]
        }{% if not loop.last %},{% endif %}
        {% endfor %}
      ]

- name: Display ceph cluster device list
  ansible.builtin.debug:
    msg: "{{ ceph_cluster_devices }}"