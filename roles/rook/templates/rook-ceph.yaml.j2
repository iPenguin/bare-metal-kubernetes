---
# https://github.com/rook/rook/blob/master/deploy/charts/rook-ceph/values.yaml
crds:
  enabled: true

nodeSelector:
  {{ lan_domain }}/rook-storage-gw: "true"
tolerations:
  - key: "nvidia.com/gpu"
    operator: "Equal"
    effect: "NoSchedule"

# -- Whether the operator should watch cluster CRD in its own namespace or not
currentNamespaceOnly: false

# -- Global log level for the operator.
# Options: `ERROR`, `WARNING`, `INFO`, `DEBUG`
logLevel: INFO

# -- If true, create & use RBAC resources
rbacEnable: true

# -- If true, create & use PSP resources
pspEnable: false

allowLoopDevices: false

csi:
  enableRbdDriver: true
  enableCephfsDriver: true
  enableGrpcMetrics: false
  enableCSIHostNetwork: true
  enableCephfsSnapshotter: true
  enableNFSSnapshotter: true
  enableRBDSnapshotter: true
  enablePluginSelinuxHostMount: false
  enableCSIEncryption: false

  provisionerNodeAffinity: {{ lan_domain }}/rook-storage-gw=true
  provisionerTolerations:
    - key: "nvidia.com/gpu"
      operator: "Equal"
      effect: "NoSchedule"

  pluginNodeAffinity: {{ lan_domain }}/rook-storage-gw=true
  pluginTolerations:
    - key: "nvidia.com/gpu"
      operator: "Equal"
      effect: "NoSchedule"

  # Set to "ms_mode=secure" when connections.encrypted is enabled in CephCluster CR
  # cephFSKernelMountOptions: ms_mode=secure

  # -- Set replicas for csi provisioner deployment
  provisionerReplicas: 2

  #clusterName: "{{ k8s_cluster_name }}"

  nfs:
    enabled: false

  readAffinity:
    # Recommended to set to true if running kernel 5.8 or newer.
    enabled: true
    # -- Define which node labels to use
    # as CRUSH location. This should correspond to the values set
    # in the CRUSH map.
    # @default -- labels listed [here](../CRDs/Cluster/ceph-cluster-crd.md#osd-topology)
    crushLocationLabels:

# -- If true, scale down the rook operator.
# This is useful for administrative actions where the rook operator must be scaled down, while using gitops style tooling
# to deploy your helm charts.
scaleDownOperator: false

monitoring:
  # Requires Prometheus to be pre-installed.
  enabled: false
